services:
  server:
    build:
      context: ./
      dockerfile: ./Dockerfile
    image: multi_domain_server:latest
    container_name: multi_domain_server
    command: "uv run -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - 8000:8000
    env_file: .env
    volumes:
      - ./:/code
    depends_on:
      - db
    networks:
      - multi_domain_tier

  static_server:
    image: multi_domain_server:latest
    container_name: multi_domain_static_server
    command: "uv run -m uvicorn static_app.main:app --reload --host 0.0.0.0 --port 8080"
    ports:
      - 8080:8080
    env_file: .env
    volumes:
      - ./static/:/code/static
    depends_on:
      - db
    networks:
      - multi_domain_tier

  db:
    image: mongo:8
    restart: unless-stopped
    container_name: multi_domain_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    expose:
      - 27017
    volumes:
      - volume_db:/data/db
    networks:
      - multi_domain_tier

  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./static:/shared
    command: sh -c "cp -r /output/* /shared/ && ls -la /shared/"

volumes:
  volume_db:
    driver: local
    name: multi_domain_db_volume

networks:
  multi_domain_tier:
    driver: bridge
